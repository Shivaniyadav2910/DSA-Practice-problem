//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

  int firstOcc(vector<long long>& arr, int n, int key) {
        int s = 0, e = n-1;
        int mid = s + (e-s)/2;
        int ans = -1;
    
        while(s<=e) {
            if(arr[mid] == key){
                ans = mid;
                e = mid - 1;
            }
    
            else if(key > arr[mid]) {//Right me jao
                s = mid + 1;
            }
    
            else if(key < arr[mid]) {//left me jao
                e = mid - 1;
            }
    
            mid = s + (e-s)/2;
        }
        return ans;
    }
 
 
  int lastOcc(vector<long long>& arr, int n, int key) {
        int s = 0, e = n-1;
        int mid = s + (e-s)/2;
        int ans = -1;
    
        while(s<=e) {
            if(arr[mid] == key){
                ans = mid;
                s = mid + 1;
            }
    
            else if(key > arr[mid]) {//Right me jao
                s = mid + 1;
            }
    
            else if(key < arr[mid]) {//left me jao
                e = mid - 1;
            }
            mid = s + (e-s)/2;
        }
        return ans;
    }

class Solution
{
    public:
    pair<long,long> indexes(vector<long long> v, long long x)
    {
        // code here
        pair<int,int>p;
        int n=v.size();
        p.first=firstOcc(v,n,x);
        p.second=lastOcc(v,n,x);
        return p;
    }
};

//{ Driver Code Starts.

int main()
 {
    long long t;
    cin>>t;
    while(t--)
    {
        long long n, k;
        vector<long long>v;
        cin>>n;
        for(long long i=0;i<n;i++)
        {
            cin>>k;
            v.push_back(k);
        }
        long long x;
        cin>>x;
        Solution obj;
        pair<long,long> pair = obj.indexes(v, x);
        
        if(pair.first==pair.second and pair.first==-1)
        cout<< -1 <<endl;
        else
        cout<<pair.first<<" "<<pair.second<<endl;

    }
	return 0;
}

// } Driver Code Ends
